from PySide6.QtWidgets import QApplication,QMainWindow,QPushButton,QLineEdit,QGridLayout,QWidget,QLabel,QBoxLayout
import numpy as np
import matplotlib.pyplot as pl
import sys
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg, NavigationToolbar2QT as NavigationToolbar

import matplotlib
matplotlib.use('Qt5Agg')
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg
from matplotlib.figure import Figure


def fcnKeplerian(rp0,ra0):
    re = 6371          # earth radius
    me = 5.972e24      # earth in kg
    G = 6.674e-20      # gravitational constant in km3/kg/s2
    muh = me*G         # gravitational parameter earth in km3/s2

    ra = ra0+re
    rp = rp0+re

    e = (ra-rp)/(ra+rp)
    h = np.sqrt(rp*muh*(1+e))
    a = (ra+rp)/2

    phi = np.linspace(0,2*np.pi,1000)
    r = np.empty(len(phi))
    r = h**2/muh/(1+e*np.cos(phi))   # create array for diff phi

    va = muh/h*(1+e*np.cos(np.pi))
    vp = muh/h*(1+e*np.cos(0))
    T = 2*np.pi/np.sqrt(muh)*a**(3/2)/60/60/24/365   # Period in years

    x = r*np.cos(phi)
    y = r*np.sin(phi)

    OP = [e,a,va,vp,T,h]
    return (x, y, OP)

class MplCanvas(FigureCanvasQTAgg):

    def __init__(self, parent=None, width=5, height=4, dpi=100):
        fig = Figure(figsize=(width, height), dpi=dpi)
        self.axes = fig.add_subplot(111)
        super(MplCanvas, self).__init__(fig)

# Subclass QMainWindow to customize your application's main window
class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("My App")

        self.main_layout = QBoxLayout()
        self.sublayout_1 = QGridLayout()
        self.sublayout_2 = QGridLayout()
        self.sublayout_3 = QBoxLayout()

        # Input
        self.apo_label = QLabel('Apoapsis in km:')
        self.peri_label = QLabel('Periapsis in km:')
        self.apo_inp = QLineEdit()
        self.peri_inp = QLineEdit()

        self.calc_button = QPushButton("Calculate")
        self.calc_button.setCheckable(True)
        self.calc_button.clicked.connect(self.EventFcn)


        self.sublayout_1.addWidget(self.apo_label,0,0)
        self.sublayout_1.addWidget(self.apo_inp,0,1)
        self.sublayout_1.addWidget(self.peri_label,1,0)
        self.sublayout_1.addWidget(self.peri_inp,1,1)

        self.sublayout_1.addWidget(self.calc_button,2,0)
        
        
        self.sublayout_3.addWidget(FigureCanvasQTAgg(pl.gcf()),3,0)
        sc = MplCanvas(self, width=5, height=4, dpi=100)
        pl.grid()
        self.ax = pl.gca()
        self.ax.set_aspect('equal', adjustable='box')
        self.ax.grid(b=True, which='major', color='k', linestyle='-', linewidth=0.1)
        self.ax.grid(b=True, which='minor', color='k', linestyle='-', linewidth=0.1)
        self.ax.minorticks_on()

        #sc = MplCanvas(self, width=5, height=4, dpi=100)
        #self.setCentralWidget(sc)

        self.main_layout.addWidget(self.sublayout_1)
        self.main_layout.addWidget(self.sublayout_2)
        
        

        widget = QWidget()
        widget.setLayout(self.main_layout)
        self.setCentralWidget(widget)

    def EventFcn(self):
        (x,y,orbit_param) = fcnKeplerian(float(self.peri_inp.text()),float(self.apo_inp.text()))
        pl.plot(x,y)
        
        
                
        
        #param = testfcn(float(self.apo_inp.text()), float(self.peri_inp.text()))
        
        #self.e_out.setText(str(float(self.apo_inp.text())+float(self.peri_inp.text())))
        #self.a_out.setText(str(int(self.apo_inp.text())*int(self.peri_inp.text())))



app = QApplication([])

window = MainWindow()
window.show()

app.exec()